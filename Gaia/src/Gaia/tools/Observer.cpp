///////////////////////////////////////////////////////////////////////////////
// Headers
///////////////////////////////////////////////////////////////////////////////
#include "Gaia/tools/Observer.h"

namespace gaia
{
//=============================================================================
///////////////////////////////////////////////////////////////////////////////
Observer::~Observer(void)
{
}

///////////////////////////////////////////////////////////////////////////////
//=============================================================================
//=============================================================================
///////////////////////////////////////////////////////////////////////////////
Observable::Observable()
:myIsCurrentlyUpdating(false)
{
}

//=============================================================================
///////////////////////////////////////////////////////////////////////////////
Observable::~Observable()
{
}

//=============================================================================
///////////////////////////////////////////////////////////////////////////////
void Observable::addObserver(Observer* obs)
{
	myObservers.push_back(obs);
}

//=============================================================================
///////////////////////////////////////////////////////////////////////////////
void Observable::removeObserver(Observer* obs)
{
	for(unsigned int i = 0; i < myObservers.size(); i++)
	{
		if(myObservers[i] == obs)
		{
			myObservers.erase(myObservers.begin() + i);
			return;
		}
	}
}

//=============================================================================
///////////////////////////////////////////////////////////////////////////////
void Observable::removeObservers()
{
	myObservers.clear();
}

//=============================================================================
///////////////////////////////////////////////////////////////////////////////
void Observable::notifyObservers()
{
	//We avoid circular updates, making sure that we only call update once for 
	//each observer
	if(!myIsCurrentlyUpdating)
	{
		for(unsigned int i = 0; i < myObservers.size(); i++)
		{
			myIsCurrentlyUpdating = true;
			myObservers[i]->update(this);
			myIsCurrentlyUpdating = false;
		}
	}
}

};